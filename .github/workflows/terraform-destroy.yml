name: destroy

on:
  workflow_dispatch:

jobs:
  destroy:
    runs-on: ubuntu-latest
#    if: false
    steps:
      - uses: actions/checkout@v3
      - uses: hashicorp/setup-terraform@v2
#        with:
#          terraform_version: 1.3.0
#          cli_config_credentials_token: 
      - name: GET Root_DB
        run: |
          MASTER=`curl  --header "X-Vault-Token: ${{ secrets.VAULT_TOKEN }}"  https://vault.apr.vee.codes/v1/secrets/data/environment-vault-impl-ref/databases/rds-vault-impl-ref |jq -r .data.data.password` 
          echo $MASTER          /v1/secrets/data/environment-vault-impl-ref/databases/rds-vault-impl-ref
          echo "master=$MASTER" >> $GITHUB_ENV
      - name: Write default file
        run: | 
          yq e '.vault_token = "${{ secrets.VAULT_TOKEN }}" ' -i config/defaults.yml
          yq e '.password = "${{  env.master }}" ' -i config/defaults.yml
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF#refs/heads/})"
        id: extract_branch
      - uses: actions/cache@v3
        with:
          path: |
            .terraform/**
            .terraform.lock.hcl
            plan.cache
          key: terraform-lock-${{ github.event.workflow_run.head_branch }}
      - name: Import AWS Secrets
        uses: hashicorp/vault-action@v2
        with:
          url: https://vault.apr.vee.codes
          token: ${{ secrets.VAULT_TOKEN }}
          secrets: |
              aws/creds/vaultAction access_key | AWS_ACCESS_KEY_ID ;
              aws/creds/vaultAction secret_key | AWS_SECRET_ACCESS_KEY ;  

      - name: Set AWS credentials as output
        id: aws-credentials-output
        run: |
          sleep 10
          echo "aws_access_key=${{ env.AWS_ACCESS_KEY_ID }}" >> $GITHUB_OUTPUT
          echo "aws_secret_key=${{ env.AWS_SECRET_ACCESS_KEY }}" >> $GITHUB_OUTPUT

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id:  ${{ env.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ env.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform destroy
        run: |
          terraform init
          terraform destroy -auto-approve
